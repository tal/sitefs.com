<!DOCTYPE html>
<html>
<head>
  
    <title>Ruby page | SiteFS</title>
  
  <link rel="stylesheet" type="text/css" href="/styles/app.css" />
</head>
<body>
  <nav class="nav">
    <section class="nav-left nav-section">
      <h1 class="title primary-nav-item nav-item">
        <a href="/">SiteFS</a>
      </h1>
    </section>

    <section class="nav-right nav-section">
      <div class="nav-item">
        <a href="/docs" class="link">Docs</a>
      </div>

      <div class="nav-item">
        <a href="http://github.com/tal/sitefs" class="link">Github</a>
      </div>
    </section>
  </nav>

  <section class="container ">
    <article class="documentation-page">
  <h1>Ruby page</h1>

<p>Ruby pages are any page with the <code>.page.rb</code> suffix. They're very powerful for generating arbitrary<br>
pages.</p>

<pre class="highlight highlight-ruby"><code><span class="n">permalink_pages</span> <span class="o">=</span> <span class="n">files_like</span><span class="p">(</span><span class="s1">'*.{jpg,jpeg,png}'</span><span class="p">).</span><span class="nf">map</span> <span class="k">do</span> <span class="o">|</span><span class="n">image_path</span><span class="o">|</span>
  <span class="n">page</span> <span class="o">=</span> <span class="n">new_page</span>
  <span class="n">page</span><span class="p">.</span><span class="nf">title</span> <span class="o">=</span> <span class="s2">"Image - </span><span class="si">#{</span><span class="no">File</span><span class="p">.</span><span class="nf">basename</span><span class="p">(</span><span class="n">image_path</span><span class="p">)</span><span class="si">}</span><span class="s2">"</span>
  <span class="n">page</span><span class="p">.</span><span class="nf">tags</span> <span class="o">&lt;&lt;</span> <span class="s1">'image permalink'</span>
  <span class="n">page</span><span class="p">.</span><span class="nf">href</span> <span class="o">=</span> <span class="no">File</span><span class="p">.</span><span class="nf">basename</span><span class="p">(</span><span class="n">image_path</span><span class="p">)</span>
  <span class="n">page</span><span class="p">.</span><span class="nf">published_at</span> <span class="o">=</span> <span class="no">File</span><span class="p">.</span><span class="nf">birthtime</span><span class="p">(</span><span class="n">image_path</span><span class="p">)</span>
  <span class="n">page</span><span class="p">.</span><span class="nf">attribues</span><span class="p">.</span><span class="nf">image_path</span> <span class="o">=</span> <span class="n">image_path</span>

  <span class="n">render</span> <span class="n">page</span><span class="p">,</span> <span class="ss">with: </span><span class="s1">'_permalink.html.erb'</span>
<span class="k">end</span>

<span class="n">page</span> <span class="o">=</span> <span class="n">new_page</span>
<span class="n">page</span><span class="p">.</span><span class="nf">title</span> <span class="o">=</span> <span class="s2">"Image Gallery"</span>
<span class="n">page</span><span class="p">.</span><span class="nf">href</span> <span class="o">=</span> <span class="s1">'index'</span>
<span class="n">page</span><span class="p">.</span><span class="nf">attribues</span><span class="p">.</span><span class="nf">images</span> <span class="o">=</span> <span class="n">permalink_pages</span>
<span class="n">render</span> <span class="n">page</span><span class="p">,</span> <span class="ss">with: </span><span class="s1">'_gallery.html.erb'</span>
</code></pre>


<p>This example starts with a helper that gets all the images in the folder. <code>files_like</code> returns an array of<br>
image paths.</p>

<ul>
<li>
<code>new_page</code> returns a new <a href="/docs/page-object">page object</a> for you to build your new page.</li>
<li>The birthtime is when the file was created, published date is used for sorting pages when they're accessed</li>
<li>Setting the image path on attributes is a way to pass it down to the view.</li>
<li>The href is the neame of the file to output</li>
<li>Finally the page is rendered into the supplied template.</li>
</ul>

<p>Since it's just code, you can also render the index page that is a gallary of all the images in the folder.</p>

<h2>Ruby page methods</h2>

<h3><code>files_like(matcher)</code></h3>

<p>Returns an array of file paths that match the matcher. It only matches files in this folder or below. The matcher<br>
can be either in the <a href="https://ruby-doc.org/core-2.3.0/Dir.html#method-c-glob">ruby glob format</a> or a regex.</p>

<h3><code>new_page</code></h3>

<p>Generates a new <a href="/docs/page-object">page object</a> for you to use. This kinda sucks and I hope to fix it soon.</p>

<h3><code>render page, with: template</code></h3>

<p>This causes the page to be rendered with the given template. The template is a string that's a relative path to an<br>
<code>html.erb</code> file. Check out the docs for the <a href="/docs/render-context">render context</a> to see what variables you have within<br>
the template.</p>
</article>

  </section>

  <section class="footer">
    <div class="copyright">
      The contents of this website are
      Â© 2017 under the terms of the
      <a href="https://github.com/tal/sitefs/blob/master/LICENSE">MIT License</a>.
    </div>
  </section>
</body>

</html>
