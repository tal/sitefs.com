<!DOCTYPE html>
<html>
<head>
  
    <title>Render Context | SiteFS</title>
  
  <link rel="stylesheet" type="text/css" href="/styles/app.css" />
</head>
<body>
  <nav class="nav">
    <section class="nav-left nav-section">
      <h1 class="title primary-nav-item nav-item">
        <a href="/">SiteFS</a>
      </h1>
    </section>

    <section class="nav-right nav-section">
      <div class="nav-item">
        <a href="/docs" class="link">Docs</a>
      </div>

      <div class="nav-item">
        <a href="http://github.com/tal/sitefs" class="link">Github</a>
      </div>
    </section>
  </nav>

  <section class="container ">
    <article class="documentation-page">
  <h1>Render Context</h1>

<p>Whenever you're inside of a layout <code>.html.erb</code> file the scope gives you access to several methods and helpers.</p>

<h3><code>current_page</code></h3>

<p>This is either <code>null</code> or a <a href="/docs/page-object">page object</a>. If present it's alway set to the item being currently rendered.</p>

<h3><code>public_tags</code></h3>

<p>All of the tags that don't start with <code>_</code> on any page registered. Useful for rendering tag clouds or nav to all tags.</p>

<h3>
<code>pages_tagged 'tag'</code> or <code>pages_tagged 'tag', all: true</code>
</h3>

<p>Returns any pages with the given tag, public or private (prfixed with <code>_</code>). By default only returns pages that have been<br>
marked as published by setting the <code>published_at</code> attribute of the <a href="/docs/page-object">page object</a>. If you set <code>all: true</code> the<br>
method returns all pages tagged that value, regardless of whether it was published or not.</p>

<h3><code>is_root!</code></h3>

<p>If you call this inside the template it will make sure that this is the last template rendered. Useful if you want to have<br>
a completely different layout for different pages or sections of the site.</p>

<h3><code>content_for</code></h3>

<p>You can pass values higher up the layout chain, if another layout calls <code>&lt;%= yield :value %&gt;</code> you can populate this by either<br>
calling <code>content_for :value, 'some value'</code> or using the block syntax</p>

<pre class="highlight highlight-erb"><code><span class="cp">&lt;%</span> <span class="n">content_for</span> <span class="ss">:header</span> <span class="k">do</span> <span class="cp">%&gt;</span>
  <span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"//google.com/my-script.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="cp">&lt;%</span> <span class="k">end</span> <span class="cp">%&gt;</span>
</code></pre>

</article>

  </section>

  <section class="footer">
    <div class="copyright">
      The contents of this website are
      Â© 2017 under the terms of the
      <a href="https://github.com/tal/sitefs/blob/master/LICENSE">MIT License</a>.
    </div>
  </section>
</body>

</html>
